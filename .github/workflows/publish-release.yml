name: Publish Nuget Package to Release

on:
  release:
    types: ["created"]
    
jobs:
  build-nuget:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x 

      - name: Get ReleaseVersion from Tag
        uses: actions/github-script@v5.0.0
        id: get_version
        with: 
          script: |
            const release_tag = context.ref.substring(10)
            const release_version = release_tag.replace('v','')
            core.setOutput('release_tag', release_tag)
            core.setOutput('release_version', release_version)
            console.log('Release Tag ' + release_tag)
            console.log('Release Version ' + release_version)
      
      - name: Restore
        run: dotnet restore ExpressionEvaluationRuntime.sln
        env: 
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
                    
      - name: Build
        run: dotnet build --no-restore -c Release ExpressionEvaluationRuntime.sln -p:Version=${{ steps.get_version.outputs.release_version }}
        env: 
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
          
      - name: Test
        run: dotnet test --no-restore ExpressionEvaluationRuntime.sln
                          
      - name: Pack Implementation
        run: dotnet pack ./ExpressionEvaluation.Runtime --configuration Release -p:PackageVersion=${{ steps.get_version.outputs.release_version }} --output .

      - name: Upload Nuget Package to release
        uses: Shopify/upload-to-release@v1
        with:
          name: ExpressionEvaluation.Runtime.${{ steps.get_version.outputs.release_version }}.nupkg
          path: ExpressionEvaluation.Runtime.${{ steps.get_version.outputs.release_version }}.nupkg
          repo-token: ${{ secrets.GITHUB_TOKEN }}
                
      - name: Publish NuGet
        run: dotnet nuget push ./*.nupkg --api-key ${{ secrets.NUGET_TOKEN }} -s https://api.nuget.org/v3/index.json
